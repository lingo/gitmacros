#!/bin/bash

fileName=""
dateStamp=""
backupFile=""
patchFile=""

function restoreBackup() {
	cp "$backupFile" "$fileName"
}

function gitUndoWhitespace() {
	cp -v "$fileName" "$backupFile"
	if [[ $? -ne 0 ]]; then
		echo "Failed to make backup; abort."
		exit 2
	fi
	git diff -w "$fileName" > "$patchFile"
	if [[ $? -ne 0 ]]; then
		echo "Failed to create diff; abort"
		exit 3
	fi
	git checkout HEAD "$fileName"
	if [[ $? -ne 0 ]]; then
		echo "Failed to checkout HEAD version; restoring backup"
		restoreBackup
		exit 4
	fi

	local pwdRelative=$(realpath --relative-to=$(git rev-parse --show-toplevel) "$PWD")
	local stripParts=$(echo "$pwdRelative" | perl -F/ -ane 'print scalar @F;')
	stripParts=$(( $stripParts + 1 ))

	patch -p$stripParts < "$patchFile"
	if [[ $? -ne 0 ]]; then
		echo -e "Failed to patch HEAD version; leaving changes, original file is\n$backupFile"
		exit 5
	fi
	echo "Removed whitespace changes from $fileName, backup of previous file is in $backupFile"
}

function setup() {
	if [[ "x$1" = "x" || "$1" == "-h" || "$1" == "--help" ]]; then
		echo -e "Git Undo Whitespace-only changes\nUsage: $0 <FILENAME>"
		exit 1
	fi
	fileName="$1"
	dateStamp="$(date +%s)"
	backupFile="${fileName}_gitundows.${dateStamp}"
	patchFile="${fileName}_${dateStamp}.patch"
}

setup "$@"
gitUndoWhitespace


